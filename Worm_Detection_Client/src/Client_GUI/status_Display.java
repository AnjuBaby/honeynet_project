package Client_GUI;

import worm_detection_client.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import module.Request;

/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
/**
 *
 * 
 */
public class status_Display extends javax.swing.JFrame {

    /**
     * Creates new form status_Display
     */
    private Connection con;
    Vector tempVect;
    Vector dataVect;
    Vector colVect;
    public String ip;
    public file_receive fr;
    Socket socket;
    Request request;

    public status_Display(file_receive fr) {
        initComponents();
        database_connection dc = new database_connection();
        con = dc.get_Connection();
        this.fr = fr;
        socket = fr.socket;

        request = new Request();
        ip = socket.getInetAddress().getHostAddress();
        System.out.println(ip);

        refreshTable();
    }

    public void refreshTable() {
        try {
       Connection con=DriverManager.getConnection("jdbc:mysql://192.168.1.54:3306/wormdetection", "snortusr", "snort");
            String sqlquery = "SELECT * FROM File_Transfer where Client_ip=?";
            PreparedStatement pstshow = con.prepareStatement(sqlquery);
            pstshow.setString(1, ip);
            ResultSet resultset = pstshow.executeQuery();
            dataVect = new Vector();
            while (resultset.next()) {
                tempVect = new Vector();

                tempVect.add(resultset.getString("Filename"));
                tempVect.add(resultset.getString("Status"));
                tempVect.add(resultset.getString("Send_ip"));
                tempVect.add(resultset.getString("date"));
                dataVect.add(tempVect);
            }
            colVect = new Vector();

            colVect.add("Filepath");
            colVect.add("Status");
            colVect.add("Destination IP");
            colVect.add("Date");
            jTable1.setModel(new DefaultTableModel(dataVect, colVect));
            pstshow.close();
        } catch (SQLException ex) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pop = new javax.swing.JPopupMenu();
        popitem = new javax.swing.JRadioButtonMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        pop.setBackground(new java.awt.Color(185, 139, 163));
        pop.setFont(new java.awt.Font("Liberation Sans", 1, 17)); // NOI18N

        popitem.setBackground(new java.awt.Color(189, 144, 161));
        popitem.setFont(new java.awt.Font("Liberation Sans", 1, 17)); // NOI18N
        popitem.setSelected(true);
        popitem.setText("Resend!");

        setTitle("Status Display");

        jPanel1.setBackground(new java.awt.Color(83, 55, 44));

        jTable1.setBackground(new java.awt.Color(196, 170, 170));
        jTable1.setFont(new java.awt.Font("Liberation Sans", 1, 17)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Destination IP", "Filepath", "Status", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int a = 0;
        int row = jTable1.getSelectedRow();
        String status = (jTable1.getModel().getValueAt(row, 1).toString());
        String filepath = (jTable1.getModel().getValueAt(row, 0).toString());
        if (jTable1.getSelectedRow() >= 0) {
            if (status == "worm affected file") {
                JOptionPane.showMessageDialog(null, "This file is worm affected! Delete the file!");
                File f = new File(filepath);
                
   //**************************************************************************/             
                
                //////     f.delete();    /////////
                
   //**************************************************************************/             
                
            } else {
                JOptionPane.showConfirmDialog(null, "Do you want to RESEND this file?", "Confirm",
                        a = JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (a == JOptionPane.YES_OPTION) {
                    send();
                } else if (a == JOptionPane.NO_OPTION) {
                    JOptionPane.showMessageDialog(null, "Either you can leave this form or you have option to select another one!");
                } else if (a == JOptionPane.CLOSED_OPTION) {
                    dispose();
                }
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked
    public void send() {
        int row = jTable1.getSelectedRow();
        String selected_IP = (jTable1.getModel().getValueAt(row, 2).toString());
        // System.out.println(selected_IP+" for resending!!!!");
        try {
            String filepath = (jTable1.getModel().getValueAt(row, 0).toString());
            System.out.println(filepath + " for resending!!!!");
            File file = new File(filepath);
            String filename = file.getName();
            //   System.out.println(selected_IP);


            ObjectOutputStream oos = new ObjectOutputStream(socket.getOutputStream());
            String clientIpAddress = socket.getLocalAddress().getHostAddress();


            if (file.exists()) {
                FileInputStream inputstream = new FileInputStream(file);
                byte[] FileData = new byte[(int) file.length()];
                new FileInputStream(file).read(FileData);
                request.setScheduleNow(selected_IP, file.getName(), FileData, filepath);
                oos.writeObject(request);
                JOptionPane.showMessageDialog(null, "Send File!");
                // oos.flush();
            }



        } catch (Exception e) {
            System.out.println(e);

        }

        dispose();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(status_Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(status_Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(status_Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(status_Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPopupMenu pop;
    private javax.swing.JRadioButtonMenuItem popitem;
    // End of variables declaration//GEN-END:variables
}
